spring.application.name=RLSP-Food

### Mysql ###
spring.datasource.url=jdbc:mysql://localhost:3308/rlspfood?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&serverTimeZone=UTC
spring.datasource.username=root
spring.datasource.password=root

### Hikari (pool de conexoes) ###
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=3
# Em ms (1000ms = 1s)
spring.datasource.hikari.idle-timeout=10000

### JPA / Hibernate ###

## Usado para criar as DB automaticametno (nao usamos por estamos usamos versionamento de DB = Flyway)
# spring.jpa.generate-ddl=true
# spring.jpa.hibernate.ddl-auto=create

# Gera os scripts DDL / Schema de forma mais rapida
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# Onde sera criado os scripts DDL
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/main/resources/ddl.sql
#spring.jpa.properties.hibernate.format_sql=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


### LOG ###
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

### Don't permit a deserialization having error (Ex: wrong attribute when sending data) ###
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

### FLYWAY ###
# Onde o Flyway busca o script para do afterMigrate
spring.flyway.locations=classpath:db/migration,classpath:db/testdata 

### NoHandlerFoundException ###
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

### PROMETHEUS ###
management.metrics.export.prometheus.enabled=true
management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
management.security.enabled=false
management.endpoints.web.exposure.include=*

spring.jackson.serialization.fail-on-empty-beans=false

